# Multi-stage build for optimized production image
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev dependencies for build)
RUN npm ci --only=production=false

# Copy source code
COPY . .

# Build optimized production files
RUN npm run build

# Production stage
FROM node:18-alpine AS production

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy built application from builder stage
COPY --from=builder /app/backend ./backend
COPY --from=builder /app/frontend ./frontend
COPY --from=builder /app/package.json ./package.json

# Replace source files with optimized versions
RUN cp frontend/index.optimized.html frontend/index.html && \
    cp frontend/script.min.js frontend/script.js && \
    cp frontend/style.min.css frontend/style.css

# Clean up build artifacts
RUN rm -f frontend/index.optimized.html frontend/script.min.js frontend/style.min.css frontend/critical.css

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S sudoku -u 1001

# Change ownership of the app directory
RUN chown -R sudoku:nodejs /app
USER sudoku

EXPOSE 80

ENV PORT=80
ENV NODE_ENV=production

CMD ["npm", "start"]
